{"version":3,"sources":["utils/RegepUtil.js","styles/login.module.css","pages/Register.js","../node_modules/webpack/buildin/global.js","utils/CommonUtil.js"],"names":["RegepConstants","ageReg","emailRegep","pointReg","idcardReg","letterAndNumReg","phoneNumReg","postalCodeReg","RegepUtil","value","test","code","S","Errors","Array","pass","tip","idcard_array","split","length","substr","11","12","13","14","15","21","22","23","31","32","33","34","35","36","37","41","42","43","44","45","46","50","51","52","53","54","61","62","63","64","65","71","81","82","91","parseInt","module","exports","email","WithHotReload","verifyEmail","CommonUtil","showLoading","APIService","register","then","res","hideLoading","showMsg","msg","className","style","pir_rg","marginBottom","onSubmit","event","preventDefault","window","$","modal","id","htmlFor","top","data-feather","name","type","placeholder","onChange","e","target","required","marginTop","help_view","center","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onClick","flex","fontWeight","margin","height","location","href","ReactDOM","render","document","getElementById","g","this","Function","blockUI","message","fadeIn","overlayCSS","backgroundColor","opacity","zIndex","cursor","css","border","color","padding","unblockUI","block","timeout","left","width","global","token","input","undefined","Object","keys","dic","key","defaultValue","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_keyStr","output","i","string","replace","utftext","n","c","charCodeAt","String","fromCharCode","_utf8_encode","isNaN","charAt","birthday","returnAge","paramBirthday","Date","currentTimeLong","paramYear","getFullYear","year","month","getMonth","day","getDate","m","getYear","Math","floor","ceil","getTime","age","sex","isValidCodeValid","slice","birthdayToAge","sexCode","ageValue","ageCode","s","hexDigits","random","uuid","join","filterParams","params","toString","print","printSection","createElement","body","appendChild","elemToPrint","domClone","cloneNode","display","textContent","mathRound","num","Number","times","pow","des","toFixed","doctorStationExcelFormatFun","list","numArr","firstList","j","str","push","arr","indexOf","cutPhone","obj","getBirth","idCard","cutString","len","strN","substring","accAdd","arg1","arg2","r1","r2","num1","num2","max","accSub","accDiv","t1","t2","accMul","s1","s2","priceSwitch","x","f","parseFloat","rs","result","leftNum","rightNum","resultArray","sortArray","getByteLen","node","setAttribute","getComputedStyle","text","index","cacheIndex","subDocId","myId","monthBefore","d","setMonth","months","initStr"],"mappings":"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","file":"static/js/Register.ebfdff78.267483a3.chunk.js","sourcesContent":["/*\r\n * @Description: 正则判断公用类\r\n * @Author: zhangbo\r\n * @Date: 2020-09-22\r\n */\r\n\r\nexport const RegepConstants = {\r\n    ageReg: /^[1-9][0-9]{0,2}$/,\r\n    emailRegep: \"^[_a-zA-Z0-9-]+(.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(.[a-zA-Z0-9-]+)*(.[a-zA-Z0-9]{2,})$\",\r\n    pointReg: /^\\d+(\\.\\d{0,2})?$/,\r\n    idcardReg:\r\n        \"^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$|^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}([0-9]|X)$\",\r\n    letterAndNumReg: \"^((1(3[0-9]|4[57]|5[0-35-9]|7[01678]|8[0-9])\\\\d{8})|(([a-zA-Z]+)\\\\d{3}))$\",\r\n    phoneNumReg: /^((\\+)?86|((\\+)?86)?)0?1[0-9]\\d{9}$/, //手机号\r\n    postalCodeReg: /^[0-8][0-7]\\d{4}$/, //邮编\r\n};\r\n\r\nexport default class RegepUtil {\r\n    /**\r\n     * 验证邮箱\r\n     * @param {*} value 输入值\r\n     */\r\n    // static isValidEmail(value) {}\r\n\r\n    /**\r\n     * 验证短信验证码\r\n     * @param {*} value 输入值\r\n     */\r\n    static isValidCode(value) {\r\n        let regex = /^\\d{6}$/;\r\n        return regex.test(value);\r\n    }\r\n\r\n    /**\r\n     * 验证手机号\r\n     * @param {*} value 输入值\r\n     */\r\n    static isValidPhoneNum(value) {\r\n        return RegepConstants.phoneNumReg.test(value);\r\n    }\r\n\r\n    /**\r\n     * 非空验证\r\n     * @param {*} value 输入值\r\n     */\r\n    static isValidEmty(value) {\r\n        if (value) {\r\n            let regex = /\\S/;\r\n            return regex.test(value);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 身份证验证 支持15位和18位身份证号\r\n     * @param {*} code 输入值\r\n     */\r\n    static isValidCodeValid(code) {\r\n        var Errors = new Array(\r\n            { pass: true, tip: \"\" },\r\n            { pass: false, tip: \"身份证号码位数不对！\" },\r\n            { pass: false, tip: \"身份证号码出生日期超出范围或含有非法字符！\" },\r\n            { pass: false, tip: \"身份证号码校验错误！\" },\r\n            { pass: false, tip: \"身份证号码中地区编码不正确！\" }\r\n        );\r\n        var area = {\r\n            11: \"北京\",\r\n            12: \"天津\",\r\n            13: \"河北\",\r\n            14: \"山西\",\r\n            15: \"内蒙古\",\r\n            21: \"辽宁\",\r\n            22: \"吉林\",\r\n            23: \"黑龙江\",\r\n            31: \"上海\",\r\n            32: \"江苏\",\r\n            33: \"浙江\",\r\n            34: \"安徽\",\r\n            35: \"福建\",\r\n            36: \"江西\",\r\n            37: \"山东\",\r\n            41: \"河南\",\r\n            42: \"湖北\",\r\n            43: \"湖南\",\r\n            44: \"广东\",\r\n            45: \"广西\",\r\n            46: \"海南\",\r\n            50: \"重庆\",\r\n            51: \"四川\",\r\n            52: \"贵州\",\r\n            53: \"云南\",\r\n            54: \"西藏\",\r\n            61: \"陕西\",\r\n            62: \"甘肃\",\r\n            63: \"青海\",\r\n            64: \"宁夏\",\r\n            65: \"新疆\",\r\n            71: \"台湾\",\r\n            81: \"香港\",\r\n            82: \"澳门\",\r\n            91: \"国外\",\r\n        };\r\n        var ereg, Y, JYM;\r\n        var S, M;\r\n        var idcard_array = new Array();\r\n        idcard_array = code.split(\"\");\r\n        if (code.length != 15 && code.length != 18) return Errors[1];\r\n        if (\r\n            code.substr(0, 6) == \"000000\" ||\r\n            code.substr(0, 6) == \"111111\" ||\r\n            code.substr(0, 6) == \"222222\" ||\r\n            code.substr(0, 6) == \"333333\" ||\r\n            code.substr(0, 6) == \"444444\" ||\r\n            code.substr(0, 6) == \"555555\" ||\r\n            code.substr(0, 6) == \"666666\" ||\r\n            code.substr(0, 6) == \"777777\" ||\r\n            code.substr(0, 6) == \"888888\" ||\r\n            code.substr(0, 6) == \"999999\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"123456\" ||\r\n            code.substr(0, 6) == \"234567\" ||\r\n            code.substr(0, 6) == \"345678\" ||\r\n            code.substr(0, 6) == \"456789\" ||\r\n            code.substr(0, 6) == \"567890\" ||\r\n            code.substr(0, 6) == \"012345\" ||\r\n            code.substr(0, 6) == \"543210\" ||\r\n            code.substr(0, 6) == \"432109\" ||\r\n            code.substr(0, 6) == \"321098\" ||\r\n            code.substr(0, 6) == \"210987\" ||\r\n            code.substr(0, 6) == \"109876\" ||\r\n            code.substr(0, 6) == \"098765\" ||\r\n            code.substr(0, 6) == \"987654\" ||\r\n            code.substr(0, 6) == \"876543\" ||\r\n            code.substr(0, 6) == \"765432\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"121212\" ||\r\n            code.substr(0, 6) == \"131313\" ||\r\n            code.substr(0, 6) == \"141414\" ||\r\n            code.substr(0, 6) == \"151515\" ||\r\n            code.substr(0, 6) == \"161616\" ||\r\n            code.substr(0, 6) == \"171717\" ||\r\n            code.substr(0, 6) == \"181818\" ||\r\n            code.substr(0, 6) == \"191919\" ||\r\n            code.substr(0, 6) == \"101010\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"212121\" ||\r\n            code.substr(0, 6) == \"232323\" ||\r\n            code.substr(0, 6) == \"242424\" ||\r\n            code.substr(0, 6) == \"252525\" ||\r\n            code.substr(0, 6) == \"262626\" ||\r\n            code.substr(0, 6) == \"272727\" ||\r\n            code.substr(0, 6) == \"282828\" ||\r\n            code.substr(0, 6) == \"292929\" ||\r\n            code.substr(0, 6) == \"202020\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"313131\" ||\r\n            code.substr(0, 6) == \"323232\" ||\r\n            code.substr(0, 6) == \"343434\" ||\r\n            code.substr(0, 6) == \"353535\" ||\r\n            code.substr(0, 6) == \"363636\" ||\r\n            code.substr(0, 6) == \"373737\" ||\r\n            code.substr(0, 6) == \"383838\" ||\r\n            code.substr(0, 6) == \"393939\" ||\r\n            code.substr(0, 6) == \"303030\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"414141\" ||\r\n            code.substr(0, 6) == \"424242\" ||\r\n            code.substr(0, 6) == \"434343\" ||\r\n            code.substr(0, 6) == \"454545\" ||\r\n            code.substr(0, 6) == \"464646\" ||\r\n            code.substr(0, 6) == \"474747\" ||\r\n            code.substr(0, 6) == \"484848\" ||\r\n            code.substr(0, 6) == \"494949\" ||\r\n            code.substr(0, 6) == \"404040\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"515151\" ||\r\n            code.substr(0, 6) == \"525252\" ||\r\n            code.substr(0, 6) == \"535353\" ||\r\n            code.substr(0, 6) == \"545454\" ||\r\n            code.substr(0, 6) == \"565656\" ||\r\n            code.substr(0, 6) == \"575757\" ||\r\n            code.substr(0, 6) == \"585858\" ||\r\n            code.substr(0, 6) == \"595959\" ||\r\n            code.substr(0, 6) == \"505050\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"616161\" ||\r\n            code.substr(0, 6) == \"626262\" ||\r\n            code.substr(0, 6) == \"636363\" ||\r\n            code.substr(0, 6) == \"646464\" ||\r\n            code.substr(0, 6) == \"656565\" ||\r\n            code.substr(0, 6) == \"676767\" ||\r\n            code.substr(0, 6) == \"686868\" ||\r\n            code.substr(0, 6) == \"696969\" ||\r\n            code.substr(0, 6) == \"606060\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"717171\" ||\r\n            code.substr(0, 6) == \"727272\" ||\r\n            code.substr(0, 6) == \"737373\" ||\r\n            code.substr(0, 6) == \"747474\" ||\r\n            code.substr(0, 6) == \"757575\" ||\r\n            code.substr(0, 6) == \"767676\" ||\r\n            code.substr(0, 6) == \"787878\" ||\r\n            code.substr(0, 6) == \"797979\" ||\r\n            code.substr(0, 6) == \"707070\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"818181\" ||\r\n            code.substr(0, 6) == \"828282\" ||\r\n            code.substr(0, 6) == \"838383\" ||\r\n            code.substr(0, 6) == \"848484\" ||\r\n            code.substr(0, 6) == \"858585\" ||\r\n            code.substr(0, 6) == \"868686\" ||\r\n            code.substr(0, 6) == \"878787\" ||\r\n            code.substr(0, 6) == \"898989\" ||\r\n            code.substr(0, 6) == \"808080\"\r\n        )\r\n            return Errors[4];\r\n        if (\r\n            code.substr(0, 6) == \"919191\" ||\r\n            code.substr(0, 6) == \"929292\" ||\r\n            code.substr(0, 6) == \"939393\" ||\r\n            code.substr(0, 6) == \"949494\" ||\r\n            code.substr(0, 6) == \"959595\" ||\r\n            code.substr(0, 6) == \"969696\" ||\r\n            code.substr(0, 6) == \"979797\" ||\r\n            code.substr(0, 6) == \"989898\" ||\r\n            code.substr(0, 6) == \"909090\"\r\n        )\r\n            return Errors[4];\r\n\r\n        if (area[parseInt(code.substr(0, 2))] == null) return Errors[4];\r\n        switch (code.length) {\r\n            case 15:\r\n                if (\r\n                    (parseInt(code.substr(6, 2)) + 1900) % 4 == 0 ||\r\n                    ((parseInt(code.substr(6, 2)) + 1900) % 100 == 0 && (parseInt(code.substr(6, 2)) + 1900) % 4 == 0)\r\n                ) {\r\n                    ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}$/; //测试出生日期的合法性\r\n                } else {\r\n                    ereg = /^[1-9][0-9]{5}[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}$/; //测试出生日期的合法性\r\n                }\r\n                if (ereg.test(code)) return Errors[0];\r\n                else return Errors[2];\r\n                break;\r\n            case 18:\r\n                if (\r\n                    parseInt(code.substr(6, 4)) % 4 == 0 ||\r\n                    (parseInt(code.substr(6, 4)) % 100 == 0 && parseInt(code.substr(6, 4)) % 4 == 0)\r\n                ) {\r\n                    ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]{3}[0-9Xx]$/; //闰年出生日期的合法性正则表达式\r\n                } else {\r\n                    ereg = /^[1-9][0-9]{5}(19|20)[0-9]{2}((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]{3}[0-9Xx]$/; //平年出生日期的合法性正则表达式\r\n                }\r\n                if (ereg.test(code)) {\r\n                    S =\r\n                        (parseInt(idcard_array[0]) + parseInt(idcard_array[10])) * 7 +\r\n                        (parseInt(idcard_array[1]) + parseInt(idcard_array[11])) * 9 +\r\n                        (parseInt(idcard_array[2]) + parseInt(idcard_array[12])) * 10 +\r\n                        (parseInt(idcard_array[3]) + parseInt(idcard_array[13])) * 5 +\r\n                        (parseInt(idcard_array[4]) + parseInt(idcard_array[14])) * 8 +\r\n                        (parseInt(idcard_array[5]) + parseInt(idcard_array[15])) * 4 +\r\n                        (parseInt(idcard_array[6]) + parseInt(idcard_array[16])) * 2 +\r\n                        parseInt(idcard_array[7]) * 1 +\r\n                        parseInt(idcard_array[8]) * 6 +\r\n                        parseInt(idcard_array[9]) * 3;\r\n                    Y = S % 11;\r\n                    M = \"F\";\r\n                    JYM = \"10X98765432\";\r\n                    M = JYM.substr(Y, 1);\r\n                    if (M == idcard_array[17]) return Errors[0];\r\n                    else return Errors[3];\r\n                } else {\r\n                    return Errors[2];\r\n                }\r\n                break;\r\n            default:\r\n                return Errors[1];\r\n                break;\r\n        }\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pir_rg\":\"login_pir_rg__3Q-Jj\",\"center\":\"login_center__pYHn3\",\"google_btn\":\"login_google_btn__UQR7E\",\"help_view\":\"login_help_view__3kXIJ\",\"resend-btn\":\"login_resend-btn__1Uhur\",\"password_title\":\"login_password_title__1bvHz\"};","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/global.css\";\r\nimport style from \"../styles/login.module.css\";\r\nimport { hot } from \"react-hot-loader/root\";\r\nimport APIService from \"../servers/APIService\";\r\nimport CommonUtil from \"../utils/CommonUtil\";\r\nlet email = \"\";\r\nfunction Register() {\r\n    const emailInputChanged = (e) => {\r\n        email = e.target.value;\r\n    };\r\n\r\n    const onRegister = (event) => {\r\n        event.preventDefault();\r\n\r\n        verifyEmail().then((res) => {\r\n            if (res && res.code == 200) {\r\n                window.$(\"#exampleModalCenter\").modal();\r\n            }\r\n        });\r\n    };\r\n\r\n    const onResend = () => {\r\n        verifyEmail().then((res) => {\r\n            if (res && res.code == 200) {\r\n                CommonUtil.showMsg(\"发送成功\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const onBack = () => {\r\n        location.href = \"./login.html\";\r\n    };\r\n\r\n    const verifyEmail = () => {\r\n        CommonUtil.showLoading();\r\n        return APIService.register({ email }).then((res) => {\r\n            CommonUtil.hideLoading();\r\n            if (res && res.code != 200) {\r\n                CommonUtil.showMsg(res.msg);\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            <h1 className={style.pir_rg}>REGISTER</h1>\r\n            <p style={{ marginBottom: 0 }} className={style.pir_rg}>\r\n                RESISTER BY E-MAIL\r\n            </p>\r\n\r\n            <form className=\"text-left\" onSubmit={onRegister}>\r\n                <div className=\"form\">\r\n                    <div id=\"username-field\" className=\"field-wrapper input\">\r\n                        <label className={style.pir_rg} htmlFor=\"username\">\r\n                            E-MAIL\r\n                        </label>\r\n\r\n                        <i style={{ top: 63 }} data-feather=\"user\"></i>\r\n\r\n                        <input\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email.\"\r\n                            onChange={emailInputChanged}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-sm-flex justify-content-between\">\r\n                        <div className=\"field-wrapper\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                name=\"txt\"\r\n                                value=\"CONTINUE\"\r\n                                className={`mt-4 btn btn-primary ${style.pir_rg}`}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 30 }} className={`${style.help_view} ${style.center}`}>\r\n                        <i className=\"icon-help\" />\r\n                        <span>HELP</span>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div\r\n                className=\"modal fade\"\r\n                id=\"exampleModalCenter\"\r\n                tabIndex=\"-1\"\r\n                role=\"dialog\"\r\n                aria-labelledby=\"exampleModalCenterTitle\"\r\n                aria-hidden=\"true\"\r\n            >\r\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <i data-feather=\"x\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p className=\"modal-text\">\r\n                                Registration is successful, please click the link in the email to complete the\r\n                                registration within 24 hours\r\n                            </p>\r\n                            <p className=\"modal-text\">If you do not receive the email, please click</p>\r\n                            <button className={style[\"resend-btn\"]} onClick={onResend}>\r\n                                RESENT\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className={`btn btn-primary ${style.pir_rg}`}\r\n                                style={{ flex: 1, fontWeight: \"initial\", margin: \"0 20px 10px 20px\", height: 50 }}\r\n                                onClick={onBack}\r\n                            >\r\n                                BACK TO LOG IN\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst WithHotReload = process.env.NODE_ENV === \"production\" ? Register : hot(Register);\r\n\r\nReactDOM.render(<WithHotReload />, document.getElementById(\"root\"));\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\r\n * @Description: 一些公用的util方法\r\n * @Author: zhangbo\r\n * @Date: 2020-09-22\r\n */\r\n\r\nimport RegepUtil from \"./RegepUtil\";\r\n\r\nexport default class CommonUtil {\r\n    static showLoading() {\r\n        window.$.blockUI({\r\n            message:\r\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-loader spin\"><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\"></line><line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\"></line><line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\"></line><line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\"></line><line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\"></line><line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\"></line><line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\"></line><line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\"></line></svg>',\r\n            fadeIn: 800,\r\n            overlayCSS: {\r\n                backgroundColor: \"#191e3a\",\r\n                opacity: 0.8,\r\n                zIndex: 1200,\r\n                cursor: \"wait\",\r\n            },\r\n            css: {\r\n                border: 0,\r\n                color: \"#25d5e4\",\r\n                zIndex: 1201,\r\n                padding: 0,\r\n                backgroundColor: \"transparent\",\r\n            },\r\n        });\r\n    }\r\n\r\n    static hideLoading() {\r\n        window.$.unblockUI();\r\n    }\r\n\r\n    static showMsg(msg) {\r\n        const block = window.$(\"body\");\r\n        window.$(block).block({\r\n            message: `<span class=\"text-semibold\">${msg}</span>`,\r\n            timeout: 2000, //unblock after 2 seconds\r\n            overlayCSS: {\r\n                cursor: \"defalut\",\r\n            },\r\n            css: {\r\n                border: 0,\r\n                color: \"#25d5e4\",\r\n                padding: 20,\r\n                zIndex: 1100,\r\n                backgroundColor: \"#191e3a\",\r\n                left: \"40%\",\r\n                top: 10,\r\n                width: \"20%\",\r\n            },\r\n        });\r\n    }\r\n    /**\r\n     * 判断是否登录\r\n     * @returns BOOL\r\n     */\r\n\r\n    static isLoged() {\r\n        return global.token && global.token.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 判断是否是undefined和空的字符串或对象\r\n     * @param {*} input\r\n     */\r\n    static isEmptyObj(input) {\r\n        if (input == undefined) {\r\n            return true;\r\n        } else if (typeof input === \"string\" && input.length == 0) {\r\n            return true;\r\n        } else if (typeof input === \"object\" && Object.keys(input).length == 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 安全取值\r\n     * @param {*} dic\r\n     * @param {*} key\r\n     * @param {*} defaultValue 默认值\r\n     */\r\n\r\n    static safeValueForkey(dic, key, defaultValue) {\r\n        if (dic) {\r\n            return dic[key] ? dic[key] : defaultValue;\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将时间戳转化为字符串\r\n     * @param timeStamp 时间戳\r\n     * @param fmt 字符串格式\r\n     * @returns String\r\n     */\r\n\r\n    /**\r\n     * 将字符串转为base64\r\n     * @param {*} input  待转的字符串\r\n     */\r\n\r\n    static encodeBase64(input) {\r\n        const _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n        const _utf8_encode = function (string) {\r\n            string = string.replace(/\\r\\n/g, \"\\n\");\r\n            let utftext = \"\";\r\n            for (let n = 0; n < string.length; n++) {\r\n                let c = string.charCodeAt(n);\r\n                if (c < 128) {\r\n                    utftext += String.fromCharCode(c);\r\n                } else if (c > 127 && c < 2048) {\r\n                    utftext += String.fromCharCode((c >> 6) | 192);\r\n                    utftext += String.fromCharCode((c & 63) | 128);\r\n                } else {\r\n                    utftext += String.fromCharCode((c >> 12) | 224);\r\n                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                    utftext += String.fromCharCode((c & 63) | 128);\r\n                }\r\n            }\r\n            return utftext;\r\n        };\r\n\r\n        let output = \"\";\r\n        let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        let i = 0;\r\n        input = _utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    //通过生日计算年龄（returnAge如果为true则返回不带单位的年龄，以岁计）\r\n    static birthdayToAge(birthday, returnAge = false) {\r\n        // 将出生日期格式化\r\n        const paramBirthday = new Date(birthday);\r\n        const currentTimeLong = new Date();\r\n        // 计算年的差值\r\n        let paramYear = paramBirthday.getFullYear() + \"\";\r\n        if (paramYear.length == 2) {\r\n            paramYear = \"19\" + paramYear;\r\n        }\r\n        let year = currentTimeLong.getFullYear() - parseInt(paramYear);\r\n        // 计算月的差值\r\n        let month = currentTimeLong.getMonth() - paramBirthday.getMonth();\r\n        // 计算天的差值\r\n        let day = currentTimeLong.getDate() - paramBirthday.getDate();\r\n        // 天的差值小于0\r\n        if (day < 0) {\r\n            month = month - 1;\r\n            let m = paramBirthday.getMonth() + 1;\r\n            // 闰月\r\n            if (1 == m || 3 == m || 5 == m || 7 == m || 8 == m || 10 == m || 12 == m) {\r\n                day = day + 31;\r\n            } else if (2 == m) {\r\n                // 二月\r\n                // 闰年二月\r\n                if (\r\n                    (0 == currentTimeLong.getYear() % 4 && 0 != currentTimeLong.getYear() % 100) ||\r\n                    (0 == currentTimeLong.getYear() % 4 && 0 == currentTimeLong.getYear() % 100)\r\n                ) {\r\n                    day = day + 29;\r\n                } else {\r\n                    // 平年二月\r\n                    day = day + 28;\r\n                }\r\n            } else {\r\n                // 平月\r\n                day = day + 30;\r\n            }\r\n        }\r\n        month += year * 12;\r\n        if (returnAge) return Math.floor(month / 12);\r\n        if (month >= 12) {\r\n            return { value: Math.floor(month / 12), code: \"Y\" };\r\n        } else if (month >= 1) {\r\n            return { value: month, code: \"M\" };\r\n        } else {\r\n            day = Math.ceil((currentTimeLong.getTime() - paramBirthday.getTime()) / (24 * 60 * 60 * 1000));\r\n            return { value: day, code: \"D\" };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从身份证号获取生日、年龄、性别信息\r\n     * @param {*} input  待转的身份证号（可以是18、15为）\r\n     * @param {*} returnAge  如果为true则返回的结果不包含年龄单位，年龄以岁计）\r\n     * return\r\n     */\r\n\r\n    static onCardNoChange(input, returnAge = false) {\r\n        let birthday = undefined;\r\n        let age = undefined;\r\n        let sex = undefined;\r\n        if (!RegepUtil.isValidCodeValid(input).pass) return;\r\n        if (input.length == 18) {\r\n            birthday = `${input.slice(6, 10)}-${input.slice(10, 12)}-${input.slice(12, 14)}`;\r\n            sex = input.slice(16, 17) % 2 ? \"1\" : \"2\";\r\n            age = this.birthdayToAge(birthday, returnAge);\r\n        } else if (input.length == 15) {\r\n            birthday = `19${input.slice(6, 8)}-${input.slice(8, 10)}-${input.slice(10, 12)}`;\r\n            sex = input.slice(14, 15) % 2 ? \"1\" : \"2\";\r\n            age = this.birthdayToAge(birthday, returnAge);\r\n        }\r\n        if (returnAge) {\r\n            return {\r\n                age: age,\r\n                sexCode: sex,\r\n                birthday: birthday,\r\n            };\r\n        }\r\n        return {\r\n            ageValue: age.value,\r\n            ageCode: age.code,\r\n            sexCode: sex,\r\n            birthday: birthday,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 生成uuid\r\n     */\r\n    static uuid() {\r\n        let s = [];\r\n        let hexDigits = \"0123456789abcdef\";\r\n        for (let i = 0; i < 36; i++) {\r\n            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n        }\r\n        s[14] = \"4\"; // bits 12-15 of the time_hi_and_version field to 0010\r\n        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n        s[8] = s[13] = s[18] = s[23] = \"-\";\r\n\r\n        let uuid = s.join(\"\") + new Date().getTime();\r\n        return uuid;\r\n    }\r\n\r\n    static filterParams = (params) => {\r\n        for (let key in params) {\r\n            if ((!params[key] && params[key] !== 0) || params[key].toString().replace(/(^\\s*)|(\\s*$)/g, \"\") === \"\") {\r\n                delete params[key];\r\n            }\r\n        }\r\n        return params;\r\n    };\r\n\r\n    static print = (id = \"printArea\") => {\r\n        let printSection = document.getElementById(\"printSection\");\r\n        if (!printSection) {\r\n            printSection = document.createElement(\"div\");\r\n            printSection.id = \"printSection\";\r\n            document.body.appendChild(printSection);\r\n        }\r\n        let elemToPrint = document.getElementById(id);\r\n\r\n        const domClone = elemToPrint.cloneNode(true);\r\n        domClone.style.display = \"block\";\r\n\r\n        printSection.textContent = \"\";\r\n        printSection.appendChild(domClone);\r\n        let personalizedSignature = document.getElementById(\"personalizedSignature\"); // eslint-disable-line no-unused-vars\r\n\r\n        window.print();\r\n        return () => {};\r\n    };\r\n\r\n    //(修复四舍五入不精确的问题) 数字或可转为数字的字符串，进行小数点后length位的四舍五入，返回数字类型（主要计算时使用）\r\n    static mathRound = (num, length = 2) => {\r\n        if (typeof num === \"number\" || (typeof num === \"string\" && !isNaN(Number(num)))) {\r\n            const times = Math.pow(10, length);\r\n            let des = num * times;\r\n            des += des > 0 ? 0.5 : -0.5;\r\n            des = parseInt(des, 10) / times;\r\n            return des;\r\n        } else {\r\n            return 0;\r\n        }\r\n        // const param = 10 ** (length + 1)\r\n        // return (Math.round(num * param / 10) / 10 ** length)\r\n    };\r\n\r\n    //（修复四舍五入不精确问题）数字或可转为数字的字符串，进行小数点后length位的四舍五入，返回字符串类型（主要页面显示使用）\r\n    static toFixed = (num, length = 2) => {\r\n        if (typeof num === \"number\" || (typeof num === \"string\" && !isNaN(Number(num)))) {\r\n            const times = Math.pow(10, length);\r\n            let des = num * times;\r\n            des += des > 0 ? 0.5 : -0.5;\r\n            des = parseInt(des, 10) / times;\r\n            return des.toFixed(length);\r\n        } else {\r\n            return \"0.00\";\r\n        }\r\n    };\r\n\r\n    //医生站查询表格格式化\r\n    static doctorStationExcelFormatFun = (list) => {\r\n        let numArr = [];\r\n        if (list && list[0]) {\r\n            const firstList = list[0];\r\n            for (let j = 1; j < firstList.length; j++) {\r\n                let str = firstList[j];\r\n                if (str == \"看诊人次\" || str == \"发票张数\") {\r\n                    numArr.push(j);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i < list.length; i++) {\r\n            let arr = list[i];\r\n            for (let j = 1; j < arr.length; j++) {\r\n                const str = arr[j];\r\n                if (numArr.indexOf(j) == -1) {\r\n                    list[i][j] = str ? CommonUtil.toFixed(str) : \"0.00\";\r\n                } else {\r\n                    list[i][j] = str ? str : 0;\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    };\r\n\r\n    static cutPhone = (obj) => {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let str = obj.replace(/ /g, \"\");\r\n        str = `${str.substr(0, 3)}-${str.substr(3, 4)}-${str.substr(7, 4)}`;\r\n        return str;\r\n    };\r\n\r\n    //根据身份证计算生日\r\n    static getBirth = (idCard) => {\r\n        let birthday = \"\";\r\n        if (idCard != null && idCard != \"\") {\r\n            if (idCard.length == 15) {\r\n                birthday = \"19\" + idCard.slice(6, 12);\r\n            } else if (idCard.length == 18) {\r\n                birthday = idCard.slice(6, 14);\r\n            }\r\n            birthday = birthday.replace(/(.{4})(.{2})/, \"$1-$2-\");\r\n            //通过正则表达式来指定输出格式为:1990-01-01\r\n        }\r\n        return birthday;\r\n    };\r\n\r\n    //截字符串 replace ‘...’\r\n    static cutString = (str, len) => {\r\n        if (str.length > len) {\r\n            let strN = str.substring(0, len);\r\n            return `${strN}...`;\r\n        } else {\r\n            return str;\r\n        }\r\n    };\r\n\r\n    //浮点数加法运算\r\n    static accAdd = (arg1, arg2) => {\r\n        let num1 = arg1 || 0;\r\n        let num2 = arg2 || 0;\r\n        let r1, r2, m;\r\n        try {\r\n            r1 = num1.toString().split(\".\")[1].length;\r\n        } catch (e) {\r\n            r1 = 0;\r\n        }\r\n        try {\r\n            r2 = num2.toString().split(\".\")[1].length;\r\n        } catch (e) {\r\n            r2 = 0;\r\n        }\r\n        m = Math.pow(10, Math.max(r1, r2));\r\n        return (num1 * m + num2 * m) / m;\r\n    };\r\n    //浮点数减法运算\r\n    static accSub = (arg1, arg2) => {\r\n        let num1 = arg1 || 0;\r\n        let num2 = arg2 || 0;\r\n        let r1, r2, m, n;\r\n        try {\r\n            r1 = num1.toString().split(\".\")[1].length;\r\n        } catch (e) {\r\n            r1 = 0;\r\n        }\r\n        try {\r\n            r2 = num2.toString().split(\".\")[1].length;\r\n        } catch (e) {\r\n            r2 = 0;\r\n        }\r\n        m = Math.pow(10, Math.max(r1, r2));\r\n        //last modify by deeka\r\n        //动态控制精度长度\r\n        n = r1 >= r2 ? r1 : r2;\r\n        return ((num1 * m - num2 * m) / m).toFixed(n);\r\n    };\r\n    //浮点数除法运算\r\n    static accDiv = (arg1, arg2) => {\r\n        let num1 = arg1 || 0;\r\n        let num2 = arg2 || 0;\r\n        let t1 = 0,\r\n            t2 = 0,\r\n            r1,\r\n            r2;\r\n        try {\r\n            t1 = num1.toString().split(\".\")[1].length;\r\n        } catch (e) {}\r\n        try {\r\n            t2 = num2.toString().split(\".\")[1].length;\r\n        } catch (e) {}\r\n\r\n        r1 = Number(num1.toString().replace(\".\", \"\"));\r\n        r2 = Number(num2.toString().replace(\".\", \"\"));\r\n        return (r1 / r2) * Math.pow(10, t2 - t1);\r\n    };\r\n    //浮点数乘法运算\r\n    static accMul = (arg1, arg2) => {\r\n        let num1 = arg1 || 0;\r\n        let num2 = arg2 || 0;\r\n        let m = 0,\r\n            s1 = num1.toString(),\r\n            s2 = num2.toString();\r\n        try {\r\n            m += s1.split(\".\")[1].length;\r\n        } catch (e) {}\r\n        try {\r\n            m += s2.split(\".\")[1].length;\r\n        } catch (e) {}\r\n        return (Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\"))) / Math.pow(10, m);\r\n    };\r\n    static priceSwitch = (x) => {\r\n        //强制保留两位小数\r\n        let f = parseFloat(x);\r\n        if (isNaN(f)) return false;\r\n        f = Math.floor(x * 100) / 100;\r\n        let s = f.toString();\r\n        let rs = s.indexOf(\".\");\r\n        if (rs < 0) {\r\n            rs = s.length;\r\n            s += \".\";\r\n        }\r\n        while (s.length < rs + 1 + 2) {\r\n            s += \"0\";\r\n        }\r\n        //每三位用一个逗号隔开\r\n        let leftNum = s.split(\".\")[0];\r\n        let rightNum = \".\" + s.split(\".\")[1];\r\n        let result;\r\n        //定义数组记录截取后的价格\r\n        let resultArray = new Array();\r\n        if (leftNum.length > 3) {\r\n            let i = true;\r\n            while (i) {\r\n                resultArray.push(leftNum.slice(-3));\r\n                leftNum = leftNum.slice(0, leftNum.length - 3);\r\n                if (leftNum.length < 4) {\r\n                    i = false;\r\n                }\r\n            }\r\n            //由于从后向前截取，所以从最后一个开始遍历并存到一个新的数组，顺序调换\r\n            let sortArray = new Array();\r\n            for (let i = resultArray.length - 1; i >= 0; i--) {\r\n                sortArray.push(resultArray[i]);\r\n            }\r\n            result = leftNum + \",\" + sortArray.join(\",\") + rightNum;\r\n        } else {\r\n            result = s;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //获取字符串长度\r\n    static getByteLen = (() => {\r\n        let node, style;\r\n        node = document.createElement(\"span\");\r\n        node.setAttribute(\"style\", \"position: absolute; left: -9999px; z-index: -99; font-size: 14px\");\r\n        document.body.appendChild(node);\r\n        style = window.getComputedStyle(node, null);\r\n\r\n        return (text, width) => {\r\n            let i = 0,\r\n                index = 0;\r\n            if (typeof text != \"string\" || !text) {\r\n                return index;\r\n            }\r\n            width = parseInt(width);\r\n            node.textContent = text;\r\n            if (width - parseFloat(style.width) > 1) {\r\n                index = text.length;\r\n            } else {\r\n                const length = text.length - 1;\r\n                // 预估一个可能的值，减少循环次数\r\n                let cacheIndex = parseInt(width / 14) - 1;\r\n                if (cacheIndex > length) {\r\n                    // 当预估值大于了text长度，text从后往前试探\r\n                    for (i = length; i > 0; i--) {\r\n                        text = text.slice(0, i);\r\n                        node.textContent = text;\r\n                        if (width - parseFloat(style.width) > 16) {\r\n                            index = i - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // 当预估值小于text长度\r\n                    node.textContent = text.slice(0, cacheIndex);\r\n                    if (width - parseFloat(style.width) > 16) {\r\n                        for (; cacheIndex <= length; cacheIndex++) {\r\n                            node.textContent = text.slice(0, cacheIndex);\r\n                            if (width - parseFloat(style.width) <= 16) {\r\n                                index = cacheIndex - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (; cacheIndex > 0; cacheIndex--) {\r\n                            node.textContent = text.slice(0, cacheIndex);\r\n                            if (width - parseFloat(style.width) > 16) {\r\n                                index = cacheIndex;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return { index };\r\n        };\r\n    })();\r\n\r\n    static subDocId = (str) => {\r\n        if (str) {\r\n            let myId = str.substr(4, 10);\r\n            return str.replace(myId, \"**********\");\r\n        }\r\n    };\r\n\r\n    static monthBefore = (month) => {\r\n        let d = new Date();\r\n        d.setMonth(d.getMonth() + month);\r\n        let year = d.getFullYear();\r\n        let months = d.getMonth() + 1;\r\n        let day = d.getDate();\r\n        if (months < 10) {\r\n            months = \"0\" + months;\r\n        }\r\n        if (day < 10) {\r\n            day = \"0\" + day;\r\n        }\r\n        const beforeMonth = year + \"-\" + months + \"-\" + day;\r\n        return beforeMonth;\r\n    };\r\n    static initStr = (obj) => {\r\n        let str = obj.replace(/ /g, \"\");\r\n        str = `${str.substr(0, 3)}-${str.substr(3, 4)}-${str.substr(7, 4)}`;\r\n        return str;\r\n    };\r\n}\r\n"],"sourceRoot":""}